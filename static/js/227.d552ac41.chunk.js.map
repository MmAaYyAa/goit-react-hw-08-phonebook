{"version":3,"file":"static/js/227.d552ac41.chunk.js","mappings":"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","sources":["components/Contact/Contact.styled.js","components/Contact/Contact.jsx","redux/selectors.js","components/ContactsList/ContactsList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactItem = styled.div` \ndisplay: flex;\n justify-content: space-between;\nalign-items: center;\nbackground-color: transparent;\nfont-size: 18px;\npadding: 15px 0 15px 12px; \nmargin-bottom: 5px;\nmargin-left: 12px;`\n   \n  export const LiItem = styled.li`\n\nmin-width: 300px;\ncolor: #004445;\nlist-style: none;`\n\nexport const DeleteButton = styled.button`\n    display: block;\n    width: 80px;\n    padding: 4px 10px;\n    background-color : #3baea0;\n    color: #475053;\n    border-radius: 3px;\n    border: 1px solid #ddeedf;\n    &:hover {\n      outline: none;\n      border: 2px solid #61b390;\n      cursor: pointer;\n      background-color: #61d2b4;\n      color: white;}`\n\n","import { useDispatch } from 'react-redux';\nimport { deleteContacts } from '../../redux/api';\nimport { LiItem, ContactItem, DeleteButton } from '../Contact/Contact.styled';\n\nconst Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContacts(contact.id));\n  return (\n    <ContactItem>\n      <LiItem>\n        {contact.name}: {contact.number}\n      </LiItem>\n      <DeleteButton type=\"button\" onClick={handleDelete}>\n        Delete\n      </DeleteButton>\n    </ContactItem>\n  );\n};\n\nexport default Contact;\n // const deleteContacts = id => {\n  //   setContacts(prev => prev.filter(el => el.id !== id),\n  //   );\n  // };","export const getContacts = state =>state.contacts.contacts;\nexport const getFilter = state => state.filter.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;","import { useSelector } from 'react-redux';\nimport Contact from 'components/Contact/Contact';\nimport {getContacts, getFilter} from '../../redux/selectors';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(getContacts );\n  const filter = useSelector(getFilter);\n  const filteredContacts = (contacts, filter) =>{\n    if(!filter) return ;\n\n    return contacts.filter(contact => \n       contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n\n  const visibleContacts = filteredContacts(contacts, filter);\n  \n  return (\n    <div>\n      {(visibleContacts ?? contacts).map(contact => (\n        <Contact\n          contact={contact}\n          key={contact.id}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default ContactsList;\n//const filteredContacts = contacts.filter(contact =>\n  //   contact.name.toLowerCase().includes(filter.toLowerCase())\n  // );","import styled from 'styled-components';\nexport const Form = styled('form')(() => {\n  return {\n    display: 'flex',\n    flexDirection: 'column',\n    miWwidth: '100%',\n    width: '300px',\n    padding: '15px 0 15px 12px',\n    marginBottom: '30px',\n    marginLeft: '12px',\n    fontSize: '18px',\n    fontWeight: '500',\n    color: '#004445',\n  };\n});\n\nexport const Input = styled('input')(() => {\n  return {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '8px 16px',\n    marginTop: '8px',\n    marginBottom: '24px', \n    border: '1px solid #b6cdbd',\n    borderRadius: '4px',\n    color: '#8787a3',\n    '&:focus': {\n      outline: 'none',\n      border: '2px solid #61b390',\n    },\n  };\n});\n\nexport const ContactFormButton = styled('button')(() => {\n  return {\n    display: 'block',\n    width: '140px',\n    padding: ' 8px 6px',\n    fontSize: '14px',\n    color: '#475053',\n    backgroundColor: '#3baea0',\n    border: '1px solid #ddeedf',\n    borderRadius: '4px',\n    '&:hover': {\n      outline: 'none',\n      border: '2px solid #61b390',\n      cursor: 'pointer',\n      backgroundColor: '#61d2b4',\n      color: 'white',\n    },\n  };\n});\n\nexport const ContactFormTitle = styled('h1')(() => {\n  return {\n    fontSize: '26px',\n    marginLeft: '12px',\n    color: '#004445',\n  };\n});\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/selectors';\nimport { addContacts } from '../../redux/api';\nimport { useState } from 'react';\nimport {\n  Form,\n  Input,\n  ContactFormButton,\n  ContactFormTitle,\n} from './ContactForm.styled';\n\n export const ContactForm = ()=> {\n  const[name,setName]= useState('');\n  const[number,setNumber]= useState('');\n  const contacts = useSelector(getContacts );\n  const dispatch = useDispatch();\n\n  const handleInputChange = event => {\n    if(event.target.name === 'name') setName(event.target.value.trim());\n    if(event.target.name === 'number') setNumber(event.target.value.trim());\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n   const dataForm = {name: name, number: number};\n   const existingContact = contacts.find(\n          contact => contact.name.toLowerCase() === dataForm.name.toLowerCase()\n         );\n        if (existingContact) {\n           return alert(`${dataForm.name} is already in contacts`);\n        }\n        dispatch(addContacts(dataForm));\n    setName('');\n    setNumber('');\n  };\n\n    return (\n      <>\n        <ContactFormTitle>Phonebook</ContactFormTitle>\n        <Form onSubmit={handleFormSubmit}>\n          <label>\n            Name\n            <Input\n              onChange={handleInputChange}\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter name\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              required\n            ></Input>\n          </label>\n          <label>\n            Number\n            <Input\n              onChange={handleInputChange}\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"Enter phone number\"\n              value={number}\n              pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n              required\n            ></Input>\n          </label>\n          <ContactFormButton type=\"submit\">Add contact</ContactFormButton>\n        </Form>\n      </>\n    );\n  \n}\n\nexport default ContactForm;\n//const createContacts = dataForm => {\n  //     const existingContact = contacts.find(\n  //       contact => contact.name.toLowerCase() === dataForm.name.toLowerCase()\n  //     );\n  //     if (existingContact) {\n  //       return alert(`${dataForm.name} is already in contacts`);\n  //     }\n  \n  //     const newContact = {\n  //       ...dataForm,\n  //       id: nanoid(),\n  //     };","import styled from 'styled-components';\n\nexport const FilterTitle = styled.h3` \n color: #004445;\n font-size: 24px;\nfont-weight: 500px;\nmargin-left: 12px;`\n \n  \n\nexport const Container = styled.div`\ndisplay: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-left: 50px;\n  width: 100%;\n  min-width: 300px;\n  gap: 10px;\n  width: 300px;\n  font-size: 12px;`\n\n  export const Text = styled.label`\n  font-size: 16px;\n  color: #004445;`\n\n  export const Input = styled.input`\n   width: 300px;\n  border-radius: 4px;\n  border: 1px solid #b6cdbd;\n  padding: 8px 16px;\n  font-size: 14px;\n  font-weight: 400;\n  margin-bottom: 30px;\n  color: #8787a3;\n  &:focus {\n      outline: none;\n      border: 2px solid #61b390;\n    }`\n\n\n\n","import {useSelector, useDispatch} from 'react-redux';\nimport {filterContacts} from '../../redux/filterSlice';\nimport { getFilter } from '../../redux/selectors';\nimport { Text, Input ,Container, FilterTitle } from './Filter.styled';\n//import { Input } from '../ContactForm/ContactForm.styled';\n\nexport const Filter = () => {\n  const {filter} = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const handleFilter =  ({ target: { value } })  => {\n    dispatch(filterContacts(value));\n     };\n  return (\n    <>\n      <FilterTitle>Contacts</FilterTitle>\n      <Container>\n        <Text>Find contacts by name</Text>\n        <Input \n          type=\"text\"\n          onChange={handleFilter}\n          value={filter}\n          placeholder=\"Search contacts...\"\n        ></Input>\n      </Container>\n    </>\n  );\n};\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Container  = styled.div`\npadding: 20px 0 20px 0;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  color: #010101;`\n\n  export const ErrorMessage = styled.p`\n  color: #f23557;`\n\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {ContactsList} from '../../components/ContactsList/ContactsList';\nimport {ContactForm} from '../../components/ContactForm/ContactForm';\nimport {Filter} from '../../components/Filter/Filter';\nimport { fetchContacts } from '../../redux/api';\nimport {selectIsLoading} from '../../redux/selectors';\nimport {selectError} from '../../redux/selectors';\nimport {Container, ErrorMessage} from './Contacts.styled';\nimport Loader from 'components/Loader/Loader';\n\nexport default function Contacts () {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n    useEffect(() => {\n        dispatch(fetchContacts());\n      }, [dispatch]);\n\n    return(\n        <Container>\n           <ContactForm />\n           <Filter />\n           {isLoading &&  <Loader />}\n           {error && <ErrorMessage>Oops... Error: {error}</ErrorMessage>}\n           <ContactsList />\n\n        </Container>\n    )\n}"],"names":["ContactItem","styled","_templateObject","_taggedTemplateLiteral","LiItem","_templateObject2","DeleteButton","_templateObject3","_ref","contact","dispatch","useDispatch","_jsxs","children","name","number","_jsx","type","onClick","deleteContacts","id","getContacts","state","contacts","getFilter","filter","selectIsLoading","isLoading","selectError","error","ContactsList","useSelector","visibleContacts","toLowerCase","includes","filteredContacts","map","Contact","Form","display","flexDirection","miWwidth","width","padding","marginBottom","marginLeft","fontSize","fontWeight","color","Input","marginTop","border","borderRadius","outline","ContactFormButton","backgroundColor","cursor","ContactFormTitle","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","handleInputChange","event","target","value","trim","_Fragment","onSubmit","preventDefault","dataForm","find","alert","concat","addContacts","onChange","placeholder","pattern","required","FilterTitle","Container","Text","_templateObject4","Filter","filterContacts","ErrorMessage","Contacts","useEffect","fetchContacts","Loader"],"sourceRoot":""}